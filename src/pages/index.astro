---
import { getCollection } from 'astro:content';
import clsx from 'clsx';
import ProjectCard from '../components/ProjectCard.astro';
import Layout from '../layouts/Layout.astro';
import Hero from 'src/components/Hero.astro';

const projects = await getCollection('projects');
projects.sort((a, b) => (a.data.publishedAt < b.data.publishedAt ? 1 : -1));

const scope = [
	{ label: 'design', value: 0.75, class: 'ml-auto' },
	{ label: 'frontend', value: 1 },
	{ label: 'backend', value: 0.75 },
];
---

<Layout class="gap-8" title=":)">
	<Hero />

	<aside class="grid md:grid-cols-3 gap-4 items-center">
		<div class="flex flex-col gap-4">
			<p class="-indent-3 text-sm text-neutral-base [text-wrap:balance]">
				<span class="text-accent-base">âœ²</span> his scope ranges from design to <span class="whitespace-nowrap"
					>full-stack</span
				> software engineering, with a focus on creating interfaces that feel right
			</p>
		</div>
		<ul aria-label="scope diagram" class="flex gap-2 md:col-span-2">
			{
				scope.map(scope => (
					<li class="flex flex-col gap-1 flex-1">
						<div
							aria-label={scope.label}
							aria-valuemax="100"
							aria-valuemin="0"
							aria-valuenow={scope.value * 100}
							class="w-full h-1.5 bg-neutral-lighter rounded-full relative"
						>
							<div
								class={clsx('rounded-full h-full bg-neutral-light', scope.class)}
								style={`width: ${scope.value * 100}%`}
							/>
						</div>

						<p class="text-center text-xs font-bold not-sr-only text-neutral-base">{scope.label}</p>
					</li>
				))
			}
		</ul>
	</aside>

	<ul class="auto-rows-fr grid md:grid-cols-3 gap-4 grid-flow-dense">
		{projects.map(project => <ProjectCard project={project} />)}
	</ul>
</Layout>
